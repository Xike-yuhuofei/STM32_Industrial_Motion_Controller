name: STM32 Firmware Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        mode: [industrial, gcode, advanced, basic]
        config: [debug, release]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup ARM GCC Toolchain
      uses: carlosperate/arm-none-eabi-gcc-action@v1
      with:
        release: '10.3-2021.10'
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y make python3 python3-pip
        
    - name: Verify toolchain
      run: |
        arm-none-eabi-gcc --version
        make --version
        
    - name: Build firmware
      run: |
        python3 tools/scripts/build.py -m ${{ matrix.config }} -t ${{ matrix.mode }} -v
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: firmware-${{ matrix.mode }}-${{ matrix.config }}
        path: |
          build/**/*.bin
          build/**/*.hex
          build/**/*.elf
          
  test:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup ARM GCC Toolchain
      uses: carlosperate/arm-none-eabi-gcc-action@v1
      with:
        release: '10.3-2021.10'
        
    - name: Run unit tests
      run: |
        # 这里添加单元测试命令
        echo "Running unit tests..."
        
    - name: Generate test report
      run: |
        echo "Generating test report..."
        
  static-analysis:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Run static analysis
      run: |
        # 这里添加静态分析工具
        echo "Running static analysis..."
        
  documentation:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        
    - name: Install documentation tools
      run: |
        pip install sphinx breathe
        
    - name: Generate documentation
      run: |
        echo "Generating documentation..."
        
    - name: Deploy to GitHub Pages
      if: success()
      run: |
        echo "Deploying documentation..."